{"version":3,"sources":["../server/app.js"],"names":["Promise","mongoUrl","process","env","MONGODB_URI","connect","useMongoClient","promiseLibrary","global","db","connection","on","console","error","bind","once","log","Date","app","use","urlencoded","extended","json","static","join","__dirname","get","req","res","sendFile"],"mappings":";;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AAEA;;;;;;AAGA;AACA,mBAASA,OAAT,GAAmBA,OAAnB;;AAEA,IAAMC,WAAWC,QAAQC,GAAR,CAAYC,WAAZ,IAA2B,qCAA5C;AACA;AACA,mBAASC,OAAT,CAAiBJ,QAAjB,EAA2B;AACzBK,kBAAgB,IADS;AAEzBC,kBAAgBC,OAAOR;AAFE,CAA3B;AAIA,IAAIS,KAAK,mBAASC,UAAlB;;AAEA;AACAD,GAAGE,EAAH,CAAM,OAAN,EAAeC,QAAQC,KAAR,CAAcC,IAAd,CAAmBF,OAAnB,EAA4B,mBAA5B,CAAf;;AAEA;AACAH,GAAGM,IAAH,CAAQ,MAAR,EAAgB,YAAM;AACpBH,UAAQI,GAAR,6BAAsC,IAAIC,IAAJ,EAAtC;AACD,CAFD;;AAIA,IAAMC,MAAM,wBAAZ;AACAA,IAAIC,GAAJ,CAAQ,qBAAWC,UAAX,CAAsB;AAC5BC,YAAU;AADkB,CAAtB,CAAR;AAGAH,IAAIC,GAAJ,CAAQ,qBAAWG,IAAX,EAAR;;AAEA;AACAJ,IAAIC,GAAJ,CAAQ,qBAAR;;AAEA;AACAD,IAAIC,GAAJ,CAAQ,kBAAQI,MAAR,CAAe,eAAKC,IAAL,CAAUC,SAAV,EAAqB,iBAArB,CAAf,CAAR;;AAEAP,IAAIC,GAAJ,CAAQ,MAAR;;AAEA;AACA;AACAD,IAAIQ,GAAJ,CAAQ,GAAR,EAAa,UAACC,GAAD,EAAMC,GAAN,EAAc;AACzBA,MAAIC,QAAJ,CAAa,eAAKL,IAAL,CAAUC,YAAU,6BAApB,CAAb;AACD,CAFD;;kBAIeP,G","file":"app.js","sourcesContent":["import express from 'express';\nimport path from 'path';\nimport mongoose from 'mongoose';\nimport bodyParser from 'body-parser';\nimport cors from 'cors';\n\nimport routes from './routes';\n\n\n// ES6 promises\nmongoose.Promise = Promise;\n\nconst mongoUrl = process.env.MONGODB_URI || \"mongodb://localhost:27017/ring-ease\";\n// mongodb connection\nmongoose.connect(mongoUrl, {\n  useMongoClient: true,\n  promiseLibrary: global.Promise\n});\nvar db = mongoose.connection;\n\n// mongodb error\ndb.on('error', console.error.bind(console, 'connection error:'));\n\n// mongodb connection open\ndb.once('open', () => {\n  console.log(`Connected to Mongo at: ${new Date()}`)\n});\n\nconst app = express();\napp.use(bodyParser.urlencoded({\n  extended: true\n}));\napp.use(bodyParser.json());\n\n// Middleware\napp.use(cors())\n\n// Serve static files from the React app\napp.use(express.static(path.join(__dirname, '../client/build')));\n\napp.use('/api', routes);\n\n// The \"catchall\" handler: for any request that doesn't\n// match one above, send back React's index.html file.\napp.get('*', (req, res) => {\n  res.sendFile(path.join(__dirname+'/../client/build/index.html'));\n});\n\nexport default app;"]}